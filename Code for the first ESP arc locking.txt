#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define ledpinGreen 1
#define ledpinRed 2
#define ledpinBlue 3


const char* ssid = "RZIAS";
const char* password = "RZAwifi123!";
const char* mqtt_server = "193.233.67.51";


WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg_t[50];
char msg_h[50];
char msg[50];
int value = 0;
String msgfromchar;  //////string для подачи из топика в json
String topicstr;
char msg_pos[50];
char bufferq1[256];
char bufferq2[256];
int signal = 0;


void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}




void callback(char* topic, byte* payload, unsigned int length) {
  msgfromchar = String((char*)payload);
  signal = atoi((char*)payload);
  Serial.print("Message arrived ");
  Serial.println(signal);
  if (atoi((char*)payload) == 1) {
    digitalWrite(ledpinRed, HIGH);
    digitalWrite(ledpinRed, LOW);
    digitalWrite(ledpinBlue, LOW);
  }
  if (atoi((char*)payload) == 2) {
    digitalWrite(ledpinGreen, LOW);
    digitalWrite(ledpinRed, LOW);
    digitalWrite(ledpinBlue, LOW);
  }
  if (atoi((char*)payload) == 0) {
    digitalWrite(ledpinGreen, LOW);
    digitalWrite(ledpinRed, LOW);
    digitalWrite(ledpinBlue, LOW);
  }
}
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("outTopic", "hello world");
      // ... and resubscribe
      client.subscribe("inTopic");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
  client.subscribe("command_arc/");
}

void setup() {
  pinMode(ledpinGreen, OUTPUT);
  pinMode(ledpinRed, OUTPUT);
  pinMode(ledpinBlue, OUTPUT);
  digitalWrite(ledpinGreen, LOW);
  digitalWrite(ledpinRed, LOW);
  digitalWrite(ledpinBlue, LOW);
  Serial.begin(9600);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  reconnect();
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
